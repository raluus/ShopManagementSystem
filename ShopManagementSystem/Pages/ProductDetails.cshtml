@page
@using ShopManagementSystem.Models;
@using Microsoft.AspNetCore.Identity;
@model ShopManagementSystem.Pages.ProductDetailsModel
@inject UserManager<Users> UserManager

@{
    ViewData["Title"] = "ProductDetails";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}

<div id="nav-details">
    <p id="nav-details-value">
        Home > @Model.ProductCategory.CategoryName > @Model.ProductSubCategory.SubCategoryName > @Model.ProductNestedCategory.NestedCategoryName > @Model.Product.ProductName
    </p>
</div>

<div class="category-name">
    <img class="animated-icon-image" src="~/images/seeMoreIcon.gif" alt="Logo" />
    <h1 class="hover-effect">Product Details</h1>
</div>

<div id="details-container">
    <div id="product-presentation" class="product-presentation-grid">
        <div id="product-image">
            <img src="~/images/@Model.Product.ProductImage" alt="Product Image">
        </div>
        <div id="main-details">
            <div id="product-name">
                <p id="name-value">
                    @Model.Product.ProductName
                </p>
            </div>
            <div id="product-status">
                @switch (Model.ProductInventory.Status)
                {
                    case 1:
                        <p id="status-value" >Status: In Stock  <img class="icon-image" src="~/images/checkIcon.png" alt="Logo" /></p>
                        break;
                    case 2:
                        <p id="status-value">Status: Out of Stock  <img class="icon-image" src="~/images/crossIcon.png" alt="Logo" /></p>
                        break;
                    case 3:
                        <p id="status-value">Status: Out of Stock - Seasonal  <img class="icon-image" src="~/images/waitIcon.png" alt="Logo" /></p>
                        break;
                    default:
                        <p id="status-value">Status: Unknown Status</p>
                        break;
                }
            </div>
            <div id="product-price">
                <span><img class="lemon-icon-image" src="~/images/bestPriceIcon.png" alt="Logo" /></span>
                <p id="price-value">
                    $@Model.ProductInventory.RetailPrice
                </p>
            </div>
            <div class="add-cart product-details-page-add-button">
                <form method="post" asp-page-handler="AddToCart">
                    <input type="hidden" name="productId" value="@Model.Product.Id" />
                    <button type="submit" class="btn btn-success btn-details-page" @(Model.ProductInventory.Status == 2 || Model.ProductInventory.Status == 3 || Model.ProductInventory.Quantity == 0 ? "disabled" : "")>
                        +<img class="icon-image" src="~/images/addCartIcon.png" alt="Logo" />
                    </button>
                </form>
            </div>
        </div>
    </div>
    <div id="similar-products">
        <div id="similar-products-label category-name">
            <img class="animated-icon-image" src="~/images/seeMoreIcon.gif" alt="Logo" />
            <h4 class="hover-effect" id="similar-products-value">Similar Products</h4>
        </div>
        <div id="similar-products-list" class="product-grid">
            @foreach (var item in Model.SimilarProducts)
            {
                var itemInventory = Model.SimilarProductsInventory.FirstOrDefault(spi => spi.ProductId == item.Id);
                <div class="product-item">
                    <a asp-page="/ProductDetails" asp-route-Id="@item.Id">

                        <div class="product-image">
                            <img src="~/images/@item.ProductImage" alt="Product Image">
                        </div>
                        <div class="product-name">
                            <p>@item.ProductName</p>
                        </div>
                        <div class="product-status">
                            @switch (itemInventory.Status)
                            {
                                case 1:
                                    <p>Status: In Stock  <img class="icon-image" src="~/images/checkIcon.png" alt="Logo" /></p>
                                    break;
                                case 2:
                                    <p>Status: Out of Stock  <img class="icon-image" src="~/images/crossIcon.png" alt="Logo" /></p>
                                    break;
                                case 3:
                                    <p>Status: Out of Stock - Seasonal  <img class="icon-image" src="~/images/waitIcon.png" alt="Logo" /></p>
                                    break;
                                default:
                                    <p>Status: Unknown Status</p>
                                    break;
                            }
                        </div>
                        <div class="product-price">
                            <p>@itemInventory.RetailPrice</p>
                        </div>


                    </a>
                    <div class="add-cart">
                        <form method="post" asp-page-handler="AddToCart">
                            <input type="hidden" name="productId" value="@item.Id" />
                            <button type="submit" class="btn btn-success" @(itemInventory.Status == 2 || itemInventory.Status == 3 || itemInventory.Quantity == 0 ? "disabled" : "")>
                                +<img class="icon-image" src="~/images/addCartIcon.png" alt="Logo" />
                            </button>
                        </form>
                    </div>

                </div>

            }
        </div>
    </div>
    <div id="product-general-information">
        <div id="product-description">
            <div id="product-description-label">
                <p id="product-description-label-p">Description</p>

            </div>
            <div id="product-description-value">
                <p id="product-description-value-p">
                    @Model.Product.ProductDescription
                </p>
            </div>
        </div>
        @if (Model.ProductAttributes.Count > 0)
        {
            <div id="product-additional-information">
                <div id="product-additional-information-label">
                    <p id="product-additional-information-label-p">
                        Additional Information About the Product
                    </p>
                </div>
                @foreach (var item in Model.ProductAttributes)
                {
                    <div class="info-row">
                        <div class="info-label">@item.AttributeKey</div>
                        <div class="info-value">@item.AttributeValue</div>
                    </div>
                }
            </div>
        }
    </div>

    <div id="product-reviews">
        <form method="post" asp-page-handler="AddReview">
            <div asp-validation-summary="All" class="text-danger"></div>
            <input type="hidden" name="productId" asp-for="Product.Id" />

            <div class="form-group">
                <label asp-for="Reviews.Rating">Rating:</label>
                <select asp-for="Reviews.Rating" id="reviews-rating">
                    <option> 1</option>
                    <option> 2</option>
                    <option> 3</option>
                    <option> 4</option>
                    <option> 5</option>
                </select>
                <span asp-validation-for="Reviews.Rating" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Reviews.ReviewText">Review:</label>
                <textarea asp-for="Reviews.ReviewText" class="form-control"></textarea>
                <span asp-validation-for="Reviews.ReviewText" class="text-danger"></span>
            </div>

            <div class="form-group">
                <input type="submit" value="Submit Review" class="btn btn-primary" />
            </div>
        </form>
    </div>

    <div id="reviews-list-container">
        <div id="label-for-reviews">
            <label id="label-for-reviews-value">
                Reviews
            </label>
        </div>
        <div id="reviews-list">
            @if (Model.ReviewsList.Count == 0)
            {
                <div id="no-reviews-msg-container">
                    <label id="no-reviews-msg-value">
                        There are no reviews left for this product.
                    </label>
                </div>
            }
            else
            {
                @foreach (var review in Model.ReviewsList)
                {
                    var user = await UserManager.FindByIdAsync(review.UserId);
                    if (user != null)
                    {
                        var username = await UserManager.GetUserNameAsync(user);
                        <span> by @user.UserName</span>
                        <div id="rating-container">
                            <label id="rating-value">@review.Rating</label>
                        </div>
                        <div id="rating-text-container">
                            <label id="rating-text-value">@review.ReviewText</label>
                        </div>
                    }
                }
            }
        </div>
    </div>

</div>

